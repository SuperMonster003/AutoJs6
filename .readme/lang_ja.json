{
  "$name": "日本語",
  "bq_annotation_android_sdk_preparation_accept_agreements": "注: プロセス中に1つまたは複数の関連契約に同意する必要がある場合があります",
  "bq_annotation_android_sdk_preparation_skip_if_sdk_installed": "注: コンピュータシステムに既にAndroid SDK (Androidソフトウェア開発キット)がインストールされている場合, この節の内容をスキップできます",
  "bq_annotation_android_sdk_tools_preparation_skip_if_tools_installed": "注: コンピュータシステムにAutoJs6ですべて必要なAndroid SDKツールがインストールされている場合, この節の内容をスキップできます",
  "bq_annotation_android_studio_release_date_note": "注: 上述バージョンのリリース日は {{ var_date_android_studio_latest_recommended_version_name }} です. その他のバージョンをダウンロードするか, 上記のリンクが失効している場合は, [Android Studioリリースアーカイブ](https://developer.android.com/studio/archive?hl=en)のページをご覧ください",
  "bq_annotation_autojs6_project_building_reference": "注: アプリのビルドおよび実行方法の詳細については, [Android Docs](https://developer.android.com/studio/run?hl=en) を参照してください",
  "bq_annotation_autojs6_project_cloning_retry_clone": "注: 上記のプロセスは非常に時間がかかる可能性があります. ネットワーク条件が悪い場合, 異なるボタンをクリックして再試行する必要がある場合があります",
  "bq_annotation_autojs6_project_deploy_apk": "注: ユーザー向けにリリースするアプリのビルド方法の詳細については, [Android Docs](https://developer.android.com/build/build-for-release?hl=en) を参照してください",
  "bq_annotation_autojs6_resources_cloning_install_git_note": "注: 上記プロセスには[Git (バージョン管理システム)](https://git-scm.com/download)をインストールする必要がある場合があります",
  "bq_annotation_gradle_task_inrt_rebuild_if_needed": "注: メインプロジェクトのコードに変更があり, パッケージ化されたアプリに変更を反映させたい場合は, `inrt:assemble` タスクを再実行してテンプレートファイルを生成し, アプリを再デプロイする必要があります",
  "bq_annotation_jdk_preparation_skip_if_jdk_installed": "注: コンピュータシステムに適切なバージョンのJDKがインストールされている場合, この節の内容をスキップできます",
  "h3_contribution": "貢献の参加",
  "h3_environment": "環境",
  "h3_functions": "機能",
  "h3_introduction": "紹介",
  "h3_languages_with_ascii": "言語",
  "h3_major_changes": "主な変更",
  "h3_manual": "マニュアル",
  "h3_project_compilation_and_build": "プロジェクトのコンパイルとビルド",
  "h3_script_development_assistance": "スクリプト開発アシスト",
  "h3_version_histories": "バージョン履歴",
  "h4_android_sdk_preparation": "Android SDK の準備",
  "h4_android_sdk_tools_preparation": "Android SDKツールの準備",
  "h4_android_studio_preparation": "Android Studioの準備",
  "h4_autojs6_gradle_tasks": "AutoJs6 用の定義済み Gradle ビルドタスク",
  "h4_autojs6_project_building": "AutoJs6プロジェクトのビルド",
  "h4_autojs6_project_deploy_apk": "AutoJs6 プロジェクトのデプロイ (APKの生成)",
  "h4_autojs6_project_deploy_run": "AutoJs6 プロジェクトのデプロイ (アプリの実行)",
  "h4_autojs6_resources_cloning": "AutoJs6リソースのクローン",
  "h4_jdk_preparation": "JDKの準備",
  "h5_for_more_version_history": "他のバージョン履歴については以下を参照してください",
  "label_after": "後",
  "label_before": "前",
  "li_deploy_run_step_click_run": "右側の `Run` (三角形アイコン) のボタンをクリックして, アプリを起動します. デフォルトのショートカットは `F10` です",
  "li_deploy_run_step_select_app": "ツールバーで `Run/Debug Configurations` メニューから `app` を選択します. これが AutoJs6 のメインアプリです",
  "li_deploy_run_step_select_device": "右側の `Available Devices` ドロップダウンから, プロジェクトアプリを実行するデバイス (実機または仮想デバイス) を選択します",
  "li_deploy_run_step_wait_install": "デプロイが完了するのを待ちます. 選択したデバイスが自動的にアプリをインストールして実行します",
  "li_development_assistance_autojs6_api_reference_docs": "AutoJs6に関するAPIおよび使用方法については, 常にアプリケーションドキュメントを参照できます",
  "li_development_assistance_code_completion_assist_development": "開発ツールを使用してコードを記述する際, コードのインテリセンス機能が開発者のコード記述を支援します",
  "li_development_assistance_develop_scripts_for_autojs6": "AutoJs6に対応するスクリプトを開発するには, 適切な開発ツールを使用する必要があります",
  "li_development_assistance_existing_projects_inspiration": "既存のスクリプト開発プロジェクトを参考にして, 個人のスクリプトプロジェクトのインスピレーションを得ることができます",
  "li_development_assistance_project_autojs6_documentation": "[AutoJs6-Documentation](http://docs-project.autojs6.com) - AutoJs6アプリケーションドキュメント",
  "li_development_assistance_project_autojs6_typescript_declarations": "[AutoJs6-TypeScript-Declarations](http://dts-project.autojs6.com) - AutoJs6型宣言ファイル (コード補完機能)",
  "li_development_assistance_project_autojs6_vscode_extension": "[AutoJs6-VSCode-Extension](http://vscext-project.autojs6.com) - AutoJs6 デバッガ (VSCode プラットフォーム エクステンション)",
  "li_development_assistance_projects_inspiration_ant_forest_supermonster003": "[Ant-Forest](https://github.com/SuperMonster003/Ant-Forest) - 蚂蚁森林のエネルギー自動収集スクリプト by [SuperMonster003](https://github.com/SuperMonster003)",
  "li_development_assistance_projects_inspiration_ant_forest_tonyjiangwj": "[Ant-Forest](https://github.com/TonyJiangWJ/Ant-Forest) - 蚂蚁森林のエネルギー自動収集スクリプト by [TonyJiangWJ](https://github.com/TonyJiangWJ)",
  "li_development_assistance_projects_inspiration_autojs_demo_snailuncle": "[autojsDemo](https://github.com/snailuncle/autojsDemo) - Auto.jsのデモ例 by [snailuncle](https://github.com/snailuncle)",
  "li_development_assistance_projects_inspiration_autojs_related_repos": "[autojs関連リポジトリ](https://github.com/topics/autojs) - GitHubでautojs話題に関するすべてのリポジトリ",
  "li_development_assistance_projects_inspiration_autojs_util_scripts_e1399579": "[autojs](https://github.com/e1399579/autojs) - Auto.jsのユーティリティスクリプト by [e1399579](https://github.com/e1399579)",
  "li_development_assistance_vscode_plugin_pc_script_development": "PCでスクリプトを作成してデバッグする場合, VSCodeプラグインを使用してPCと携帯電話を接続できます",
  "li_environment_android_os": "Androidオペレーティングシステム",
  "li_environment_api_requirement": "[API](https://developer.android.com/guide/topics/manifest/uses-sdk-element#ApiLevels) [24](https://developer.android.com/reference/android/os/Build.VERSION_CODES#N) ([7.0](https://ja.wikipedia.org/wiki/Android_Nougat)) [[N](https://developer.android.com/reference/android/os/Build.VERSION_CODES#N)] 以上",
  "li_function_accessibility_service_support": "無障害サービスに基づく自動化操作をサポート ([AccessibilityService](https://developer.android.com/reference/android/accessibilityservice/AccessibilityService))",
  "li_function_e4x_support": "E4X (ECMAScript for XML)の記述インターフェースをサポート ([E4X](https://ja.wikipedia.org/wiki/E4X))",
  "li_function_floating_button_quick_actions": "浮動ボタンのクイックアクションをサポート (スクリプトの録画および再生/パッケージの表示/レイアウト分析)",
  "li_function_ide_features": "JavaScript IDEとして使用可能 (コード補完/変数リネーム/コードフォーマッティング)",
  "li_function_layout_analysis_support": "レイアウトインターフェイスの分析をサポート (Android StudioのLayoutInspectorに類似)",
  "li_function_packaging_to_apk_support": "スクリプトファイルまたはプロジェクトをAPKファイルにパッケージ化する機能をサポート",
  "li_function_recording_and_playback_support": "録画機能および録画再生機能をサポート",
  "li_function_root_features_support": "ルート権限を使用して機能を拡張 (スクリーンのクリック/スワイプ/録画/Shell)",
  "li_function_screenshot_and_image_matching_support": "スクリーンショット/スクリーン保存/画像検索/画像マッチングをサポート",
  "li_function_selector_api_support": "セレクタAPIをサポートし, コントロールのトラバース/情報の取得/コントロール操作を提供 (UiAutomatorに類似: [UiAutomator](https://developer.android.com/training/testing/ui-automator))",
  "li_function_tasker_plugin_support": "Taskerプラグインとして使用可能",
  "li_function_vscode_integration_support": "VS Code拡張機能との連携をサポート (AutoJs6-VSCode-Extensionプラグインが必要です: [AutoJs6-VSCode-Extension](http://vscext-project.autojs6.com))",
  "li_major_changes_multilingual_support": "多言語対応 [ 西 / 仏 / 露 / 阿 / 日 / 韓 / 英 / 簡中 / 繁中 / ... ]",
  "li_major_changes_new_modules": "新モジュール [ [base64](https://docs.autojs6.com/#/base64) / [crypto](https://docs.autojs6.com/#/crypto) / [sqlite](https://docs.autojs6.com/#/sqlite) / [i18n](https://docs.autojs6.com/#/i18n) / [notice](https://docs.autojs6.com/#/notice) / [ocr](https://docs.autojs6.com/#/ocr) / [opencc](https://docs.autojs6.com/#/opencc) / [qrcode](https://docs.autojs6.com/#/qrcode) / [shizuku](https://docs.autojs6.com/#/shizuku) / ... ]",
  "li_major_changes_night_mode_support": "ナイトモード対応 [ 設定ページ / ドキュメントページ / レイアウト分析ページ / 浮動ウィンドウ / ... ]",
  "li_major_changes_rhino_engine_upgrade": "[Rhino](https://github.com/mozilla/rhino/)エンジンが [v1.7.7.2](https://github.com/mozilla/rhino/releases/tag/Rhino1_7_7_2_Release) から {{ latest_rhino_engine_name_with_github_lineno_address }} にアップグレードされました",
  "li_major_changes_shizuku_adb_privileges_support": "[Shizuku](https://shizuku.rikka.app/introduction/)経由でADB特権を取得し, システムAPIを使用可能",
  "li_major_changes_theme_color_support": "テーマカラーの適応 [ グループ化 / ロケーション / 検索 / 履歴 / 明るさとコントラストの自動適応 / ... ]",
  "li_major_changes_vscode_plugin_support": "[VSCodeプラグイン](http://vscext-project.autojs6.com)がクライアント (LAN)とサーバ (LAN/ADB)接続方法をサポート",
  "li_major_changes_websocket_support": "[WebSocket](https://docs.autojs6.com/#/webSocketType)インスタンスの作成, および[WebSocketプロトコル](https://ja.wikipedia.org/wiki/WebSocket)に基づくネットワークリクエストの処理をサポート",
  "li_manual_documentation": "アプリケーションドキュメント",
  "li_manual_troubleshooting": "トラブルシューティング",
  "li_manual_user_manual": "ユーザーマニュアル (作成中)",
  "li_project_build_step_click_build_project": "`Build Project` (ハンマーアイコン) のボタンを左側でクリックして, プロジェクトのビルドを開始します. デフォルトのショートカットは CTRL + F9 です",
  "li_project_build_step_toolbar": "ツールバーの `Run/Debug Configurations` メニューから `app` を選択します. これは AutoJs6 のメインアプリです",
  "li_project_build_step_wait_build_success": "ビルドが完了するのを待ちます. `Builder Output` タブに \"BUILD SUCCESSFUL in 1h 17m 34s\" のようなメッセージが表示されます",
  "li_rhino_feature_array_includes_support": "[Array.prototype.includes()](https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/includes)のサポート",
  "li_rhino_feature_bigint_support": "[BigInt](https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/BigInt)のサポート",
  "li_rhino_feature_object_values_support": "[Object.values()](https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/values)のサポート",
  "li_rhino_feature_rhino_engine_compatibility_list": "Rhinoエンジンの[互換リスト](https://mozilla.github.io/rhino/compat/engines.html)を見る",
  "li_rhino_feature_rhino_engine_new_features": "Rhinoエンジンの[新機能](http://project.autojs6.com/blob/master/app/src/main/assets-app/doc/RHINO.md)を見る",
  "li_rhino_feature_template_strings_support": "[テンプレート文字列](https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Template_literals)のサポート",
  "li_rhino_feature_unicode_code_point_escapes_support": "Unicode [コードポイント](https://developer.mozilla.org/ja/docs/Glossary/Code_point)エスケープのサポート [補助平面](https://ja.wikipedia.org/wiki/多言語面#補助平面)文字",
  "p_android_sdk_preparation_auto_sdk_location_filled": "上記の `Android SDK場所` の欄が自動的に入力され, SDKの準備が完了します",
  "p_android_sdk_preparation_edit_sdk_location": "`Android SDK場所` の欄が空白の場合は, 右側の `編集` ボタンをクリックし, 表示されるウィンドウで `次へ` ボタンを数回クリックします",
  "p_android_sdk_preparation_finish_sdk_installation": "関連するリソースのダウンロードとインストールが完了したら, `完了` ボタンをクリックします",
  "p_android_sdk_preparation_open_settings_android_studio": "`Android SDK (Android ソフトウェア開発キット)` の設定ページを開く (いずれかの方法)",
  "p_android_sdk_tools_preparation_sdk_tools": "`SDK Tools (SDK ツール)` の設定ページを開く (いずれかの方法)",
  "p_android_sdk_tools_preparation_sdk_tools_required": "AutoJs6では一部のSDKツール(NDKやCMakeなど)が必要です",
  "p_android_sdk_tools_preparation_show_package_details": "`パッケージの詳細を表示` を選択し, NDKおよびCMakeをそれぞれクリックして, 対応するバージョンのツールが選択されていることを確認してください, SDKツールのバージョン情報は, AutoJs6プロジェクトのルートディレクトリにある `version.properties` ファイルに記載されています",
  "p_android_studio_preparation_download_android_studio": "`{{ android_studio_latest_recommended_version_name }}` バージョンをダウンロードしてください (いずれかを選択)",
  "p_android_studio_preparation_install_android_studio": "上記のファイルをインストールまたは解凍し, Android Studio ソフトウェアを実行します (例: `\"D:\\android-studio\\bin\\studio64.exe\"`)",
  "p_autojs6_gradle_tasks_intro": "プロジェクトのアプリをビルドする以外にも, AutoJs6 はいくつかの定義済み Gradle ビルドタスクをサポートしており, これらは開発者がプロジェクト関連の便利な操作を行うのに役立ちます",
  "p_autojs6_gradle_tasks_overview": "ツールバーの `Run/Debug Configurations` メニューには, 各タスクの左側に象のアイコンが表示される様々な定義済み Gradle タスクがあります",
  "p_autojs6_project_building_failed": "ビルドに失敗した場合は, エラーメッセージを AutoJs6 プロジェクトの [Issues](http://issues.autojs6.com) ページに報告できます",
  "p_autojs6_project_building_if_failed": "ビルドが自動的に進行しなかった場合, またはプロジェクトを再ビルドする必要がある場合は, 次の手順に従ってください",
  "p_autojs6_project_cloning_autobuild_dependencies": "クローンが完了すると, Android Studio は AutoJs6 のプロジェクト ウィンドウを開き, `Dependencies (依存関係)` の初期ダウンロードおよび Gradle の構築作業を自動的に完了します",
  "p_autojs6_project_cloning_build_successful": "ビルドが完了すると, Android Studio の `Build` タブに `BUILD SUCCESSFUL in 1h 17m 34s` のようなメッセージが表示されます",
  "p_autojs6_project_cloning_debug_version_apk": "プロジェクトをパッケージ化して, Android デバイスにインストール可能な APK ファイルを生成します",
  "p_autojs6_project_deploy_apk_overview": "プロジェクトをパッケージして, Android デバイスにインストール可能な APK ファイルを生成します",
  "p_autojs6_project_deploy_run_overview": "プロジェクトが正常にビルドされた後, 実機 (例: スマートフォン/タブレット) や仮想デバイス (例: Android エミュレーター) にアプリとしてデプロイできます",
  "p_autojs6_resources_cloning_click_clone_button": "`Clone (クローン)` ボタンをクリックし, AutoJs6 プロジェクト リソースがデバイスにローカルにクローンされるのを待ちます",
  "p_autojs6_resources_cloning_clone_from_vcs": "Android Studio のメインページで `Get from VCS (バージョン管理システムから取得)` ボタンをクリックします",
  "p_autojs6_resources_cloning_fill_directory": "`Directory (ディレクトリ)` の欄を必要に応じて特定のパスに変更できます",
  "p_autojs6_resources_cloning_fill_url": "`URL (統一リソースロケーターロケーション)` の欄に `https://github.com/SuperMonster003/AutoJs6.git` を入力します",
  "p_contribution_table_data_entries_sorted_by_recent_submissions": "データ項目は `最近の提出` の降順で並べ替えられます",
  "p_contribution_table_data_updated_on": "データは {{ var_date_contribution_table_data_updated }} に更新されました",
  "p_contribution_table_new_pull_requests_pending_processing": "新たに発行された未処理のプルリクエストは, マージされた後にデータ統計に含まれます",
  "p_contribution_table_some_contributors_not_appearing": "一部の貢献者は [GitHub Contributors](https://github.com/SuperMonster003/AutoJs6/graphs/contributors) に正常に表示されず, コミット記録が空のままです. 貢献履歴は [プルリクエスト](https://github.com/SuperMonster003/AutoJs6/pulls) から確認できます",
  "p_contribution_table_thank_all_contributors": "AutoJs6 プロジェクト開発に参加したすべての貢献者に感謝します",
  "p_gradle_task_app_bundle_description": "タスク実行後, AutoJs6 プロジェクトの最新の JAR ファイルが生成されます. [Android d.ts Generator](https://github.com/NativeScript/android-dts-generator) ([NativeScript](https://github.com/NativeScript) 作) のツールを使用して, AutoJs6 メインアプリの型定義 (d.ts 形式のファイル) を生成できます",
  "p_gradle_task_app_bundle_summary": "デバッグビルドプロセスの成果物をパッケージします. これは主に [AutoJs6 型定義](http://dts-project.autojs6.com) プロジェクトに使用されます",
  "p_gradle_task_app_digest_filename_comparison": "以下は, ダイジェスト情報を付加する前後のファイル名の比較です",
  "p_gradle_task_app_digest_summary": "リリースビルドで生成された APK ファイルにダイジェスト情報を付加します. これは, GitHub に最新バージョンの AutoJs6 を公開する前に, 最終的なファイル名を確定するためのものです",
  "p_gradle_task_inrt_description": "AutoJs6 プロジェクトにはさまざまなビルドバリアントがあります. その中で \"inrt\" バリアントは, スクリプトパッケージ機能のために使用され, パッケージ用のテンプレートファイル \"template.apk\" を生成します",
  "p_gradle_task_inrt_exception": "パッケージ機能を使用する際に, 次のエラーメッセージが表示される場合があります",
  "p_gradle_task_inrt_exception_explanation": "これはテンプレートファイルが存在しないことを示しています. テンプレートファイルを生成するために, 手動で `inrt:assemble` タスクを実行し, その後に再度ビルドしてデプロイしてください",
  "p_gradle_task_inrt_summary": "\"inrt\" ビルドバリアントをアセンブルします. これは主に AutoJs6 のスクリプトパッケージ機能のためのものです",
  "p_introduction_autojs6_is_based_on_autojs": "AutoJs6 は `2021/12/01` に Auto.js 最終プロジェクトを基に二次開発され, 引き続きオープンソースとして無料で提供されています",
  "p_introduction_autojs_definition": "[Auto.js](https://github.com/hyb1996/Auto.js) は Android プラットフォーム用の [アクセシビリティサービス](https://developer.android.com/guide/topics/ui/accessibility/service?hl=zh-cn) をサポートする JavaScript 自動化ツールです",
  "p_introduction_autojs_released_information": "Auto.js は [hyb1996](https://github.com/hyb1996) によって `2017/01/27` に初めてリリースされ, `2020/03/13` にメンテナンスを停止しました. 最終バージョンの名前は `4.1.1 Alpha2` で, ビルドバージョンは `461` です",
  "p_introduction_related_autojs_table_announce": "以下の表には, Auto.js に関連するプロジェクトの一部が記載されています (開発日順に並べ替えられています)",
  "p_introduction_related_autojs_table_app_is_free_or_not": "表の Auto.js Pro 7/8/9 は有料バージョンです. その他は無料のオープンソースバージョンです",
  "p_introduction_related_autojs_table_date_is_estimated": "表の日付は推定値であり, 実際とは異なる場合があります",
  "p_jdk_preparation_add_existing_jdk": "`Add JDK (JDK を追加)` を選択して既存のローカル JDK を追加し, そのディレクトリを指定して JDK を追加することも可能です",
  "p_jdk_preparation_download_jdk": "JDK は IDE から直接ダウンロードするか, [Oracle サイト](https://www.oracle.com/java/technologies/downloads/) にアクセスしてダウンロードできます",
  "p_jdk_preparation_download_new_jdk": "または, `Download JDK (JDK をダウンロード)` を選択して適切な JDK をダウンロードし, `Download (ダウンロード)` ボタンをクリックしてダウンロードが完了するのを待ちます",
  "p_jdk_preparation_jdk_max_supported_version": "{{ var_date_jdk_max_supported }} 現在, AutoJs6がサポートする最大のJDKバージョンは `{{ jdk_max_supported }}` です",
  "p_jdk_preparation_jdk_version_requirements": "AutoJs6プロジェクトが依存する `JDK (Java開発キット)` のリリースバージョンは少なくとも `{{ jdk_min_supported }}` で, それ以下のバージョンは推奨されませんが, 最低でも `{{ jdk_min_suggested }}` の使用を推奨します",
  "p_jdk_preparation_open_jdk_settings": "`Gradle JDK` の設定ページを開く (いずれかの方法)",
  "p_jdk_preparation_select_existing_jdk": "リストに適切なバージョンのJDKが存在する場合(>= `{{ jdk_min_supported }}`), それを選択してください",
  "p_jdk_preparation_select_gradle_jdk": "`Gradle JDK` で異なるバージョンの JDK を選択または追加できます",
  "p_languages_all_supported_for_readme": "現在の README.md ファイルは以下の言語に対応しています",
  "p_major_changes_autojs6_version_updates": "Auto.js の最終オープンソースバージョン `4.1.1 Alpha2` と比較して, AutoJs6 は以下のアップグレードまたは変更を行いました",
  "p_project_compilation_and_build_android_studio_build_methods": "このセクションでは, AutoJs6 オープンソース プロジェクトのコンパイルとビルド方法を Android Studio を例に説明します. IntelliJ IDEA も同様です",
  "p_project_compilation_and_build_android_studio_intellij_idea": "AutoJs6 オープンソース プロジェクトのデバッグや開発が必要な場合は, [Android Studio](https://pro.autojs.org/) ([Google](https://www.google.com/) 社製品) または [IntelliJ IDEA](https://www.jetbrains.com/idea/) ([Jetbrains](https://www.jetbrains.com/) 社製品) を使用できます",
  "step_android_sdk": "Android SDK (Android ソフトウェア開発キット)",
  "step_appearance_behavior": "Appearance & Behavior (外観と動作)",
  "step_build_execution_deployment": "Build, Execution, Deployment (ビルド、実行、デプロイ)",
  "step_build_tools": "Build Tools (ビルドツール)",
  "step_debug_apk_path": "デフォルトの署名が含まれたデバッグ版のインストールパッケージを生成します",
  "step_debug_version_path": "デバッグ版 (デバッグバージョン)",
  "step_example_debug_path": "パスの例: `\"D:\\AutoJs6\\app\\build\\outputs\\apk\\debug\\\"`",
  "step_example_release_path": "パスの例: `\"D:\\AutoJs6\\app\\release\\\"`",
  "step_file": "File (ファイル)",
  "step_find_action": "Find action (アクションを検索)",
  "step_generate_debug_apk": "`Build (ビルド)`",
  "step_help": "Help (ヘルプ)",
  "step_languages_and_frameworks": "Language & Frameworks (言語とフレームワーク)",
  "step_prepare_signing_file": "署名ファイル (新規または選択) を準備して署名付きのリリース版インストールパッケージを生成します",
  "step_release_version_apk": "リリース版 (リリースバージョン)",
  "step_release_version_path": "`Build (ビルド)`",
  "step_sdk_tools_show_details": "SDK Tools (SDK ツール) (右側のウィンドウにあります)",
  "step_select_apk_option": "`APK` オプションを選択します",
  "step_settings": "Settings (設定)",
  "step_system_settings": "System Settings (システム設定)",
  "symbol_arrow": "->",
  "symbol_hash": "#",
  "symbol_pipe": "|",
  "table_header_contribution_contributors": "貢献者",
  "table_header_contribution_number_of_commits": "コミット数",
  "table_header_contribution_recent_submissions": "最近の提出",
  "table_header_introduction_related_autojs_app_name": "アプリ名",
  "table_header_introduction_related_autojs_developer": "開発者",
  "table_header_introduction_related_autojs_development_end_date": "開発終了日",
  "table_header_introduction_related_autojs_development_start_date": "開発開始日",
  "table_header_introduction_related_autojs_project": "プロジェクト",
  "text_autojs6_synopsis": "アクセシビリティサービスをサポートする Android プラットフォーム用の JavaScript 自動化ツール",
  "text_changelog_item_dependency": "一部の依存関係またはローカルライブラリのバージョン調整",
  "text_current_lowercase": "現在",
  "text_input": "入力",
  "text_or": "または",
  "text_reference": "参照",
  "text_search": "検索",
  "text_stands_for": "を表します",
  "text_traditional_method_lowercase": "従来の方法"
}