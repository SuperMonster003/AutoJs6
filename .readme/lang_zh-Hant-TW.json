{
  "$name": "繁體中文 (台灣)",
  "bq_annotation_android_sdk_preparation_accept_agreements": "注: 過程中可能需要同意一個或多個相關協議才能繼續",
  "bq_annotation_android_sdk_preparation_skip_if_sdk_installed": "注: 如果計算機系統已安裝 Android SDK (安卓軟體開發工具包), 則可跳過此小節內容",
  "bq_annotation_android_sdk_tools_preparation_skip_if_tools_installed": "注: 如果計算機系統已安裝 AutoJs6 全部所需的 Android SDK Tools, 則可跳過此小節內容",
  "bq_annotation_android_studio_release_date_note": "注: 上述版本釋出時間為 {{ var_date_android_studio_latest_recommended_version_name }}. 如需下載其他版本, 或上述連結已失效, 可訪問 [Android Studio 發行版本歸檔](https://developer.android.com/studio/archive?hl=en) 頁面",
  "bq_annotation_autojs6_project_building_reference": "注: 關於如何構建並執行應用的更多內容, 可參閱 [Android Docs](https://developer.android.com/studio/run?hl=zh-cn)",
  "bq_annotation_autojs6_project_cloning_retry_clone": "注: 上述過程可能非常耗時. 若網路條件欠佳, 可能需要重試多次 (點選 Retry 按鈕)",
  "bq_annotation_autojs6_project_deploy_apk": "注: 關於如何構建應用以向用戶釋出的更多內容, 可參閱 [Android Docs](https://developer.android.com/build/build-for-release?hl=zh-cn)",
  "bq_annotation_autojs6_resources_cloning_install_git_note": "注: 上述過程可能需要安裝 [Git (分散式版本控制系統)](https://git-scm.com/download)",
  "bq_annotation_gradle_task_inrt_rebuild_if_needed": "注: 當主專案程式碼發生變更, 且希望將變更同步到打包應用時, 需要重新執行 `inrt:assemble` 任務生成模板檔案並再次部署 App",
  "bq_annotation_jdk_preparation_skip_if_jdk_installed": "注: 如果計算機系統已安裝 JDK 且版本滿足上述要求, 則可跳過此小節內容",
  "h3_contribution": "貢獻參與",
  "h3_environment": "環境",
  "h3_functions": "功能",
  "h3_introduction": "簡介",
  "h3_languages_with_ascii": "語言 (Languages)",
  "h3_major_changes": "主要變更",
  "h3_manual": "指南",
  "h3_project_compilation_and_build": "專案編譯構建",
  "h3_script_development_assistance": "指令碼開發輔助",
  "h3_version_histories": "版本歷史",
  "h4_android_sdk_preparation": "Android SDK 準備",
  "h4_android_sdk_tools_preparation": "Android SDK Tools 準備",
  "h4_android_studio_preparation": "Android Studio 準備",
  "h4_autojs6_gradle_tasks": "AutoJs6 預置 Gradle 構建任務",
  "h4_autojs6_project_building": "AutoJs6 專案構建",
  "h4_autojs6_project_deploy_apk": "AutoJs6 專案部署 (生成 APK)",
  "h4_autojs6_project_deploy_run": "AutoJs6 專案部署 (執行 App)",
  "h4_autojs6_resources_cloning": "AutoJs6 資源克隆",
  "h4_jdk_preparation": "JDK 準備",
  "h5_for_more_version_history": "更多版本歷史可參閱",
  "label_after": "後",
  "label_before": "前",
  "li_deploy_run_step_click_run": "點選右側的 `Run (執行)` 按鈕 (形如三角形) 開始執行專案, 預設快捷鍵為 `F10`",
  "li_deploy_run_step_select_app": "在 `Toolbar (工具欄)` 中, 從 `Run/Debug Configurations (執行/除錯配置)` 選單中選擇 `app`, 這是 AutoJs6 的主應用",
  "li_deploy_run_step_select_device": "在右側 `Available Devices (可用裝置)` 選單中, 選擇需要執行專案 App 的裝置 (實體裝置或虛擬裝置)",
  "li_deploy_run_step_wait_install": "等待部署完成, 指定裝置將自動安裝並執行專案 App",
  "li_development_assistance_autojs6_api_reference_docs": "編寫程式碼時, AutoJs6 相關 API 及使用方式, 可隨時查閱應用文件",
  "li_development_assistance_code_completion_assist_development": "使用開發工具編寫程式碼時, 程式碼智慧補全功能可以更好地輔助開發者完成程式碼編寫",
  "li_development_assistance_develop_scripts_for_autojs6": "開發 AutoJs6 可執行的指令碼, 需使用合適的開發工具",
  "li_development_assistance_existing_projects_inspiration": "現有的指令碼開發專案可作為參考, 激發個人指令碼專案的創作靈感",
  "li_development_assistance_project_autojs6_documentation": "[AutoJs6-Documentation](http://docs-project.autojs6.com) - AutoJs6 應用文件",
  "li_development_assistance_project_autojs6_typescript_declarations": "[AutoJs6-TypeScript-Declarations](http://dts-project.autojs6.com) - AutoJs6 宣告檔案 (程式碼智慧補全)",
  "li_development_assistance_project_autojs6_vscode_extension": "[AutoJs6-VSCode-Extension](http://vscext-project.autojs6.com) - AutoJs6 偵錯程式 (VSCode 平臺外掛)",
  "li_development_assistance_projects_inspiration_ant_forest_supermonster003": "[Ant-Forest](https://github.com/SuperMonster003/Ant-Forest) - 螞蟻森林能量自動收取指令碼 by [SuperMonster003](https://github.com/SuperMonster003)",
  "li_development_assistance_projects_inspiration_ant_forest_tonyjiangwj": "[Ant-Forest](https://github.com/TonyJiangWJ/Ant-Forest) - 螞蟻森林能量自動收取指令碼 by [TonyJiangWJ](https://github.com/TonyJiangWJ)",
  "li_development_assistance_projects_inspiration_autojs_demo_snailuncle": "[autojsDemo](https://github.com/snailuncle/autojsDemo) - Auto.js 演示示例 by  [snailuncle](https://github.com/snailuncle)",
  "li_development_assistance_projects_inspiration_autojs_related_repos": "[autojs 相關倉庫](https://github.com/topics/autojs) - GitHub 與 autojs 話題相關的全部倉庫",
  "li_development_assistance_projects_inspiration_autojs_util_scripts_e1399579": "[autojs](https://github.com/e1399579/autojs) - Auto.js 實用指令碼 by  [e1399579](https://github.com/e1399579)",
  "li_development_assistance_vscode_plugin_pc_script_development": "如需在 PC 上進行指令碼編寫與除錯, VSCode 外掛可以實現 PC 與手機的互聯",
  "li_environment_android_os": "Android 作業系統",
  "li_environment_api_requirement": "[API](https://developer.android.com/guide/topics/manifest/uses-sdk-element#ApiLevels) [24](https://developer.android.com/reference/android/os/Build.VERSION_CODES#N) ([7.0](https://zh.wikipedia.org/wiki/Android_Nougat)) [[N](https://developer.android.com/reference/android/os/Build.VERSION_CODES#N)] 及以上",
  "li_function_accessibility_service_support": "支援基於 [無障礙服務](https://developer.android.com/reference/android/accessibilityservice/AccessibilityService) 的自動化操作",
  "li_function_e4x_support": "支援 [E4X](https://zh.wikipedia.org/wiki/E4X) (ECMAScript for XML) 編寫介面",
  "li_function_floating_button_quick_actions": "支援浮動按鈕快捷操作 (指令碼錄製及執行/檢視包名及活動/佈局分析)",
  "li_function_ide_features": "可用作 JavaScript IDE (程式碼補全/變數重新命名/程式碼格式化)",
  "li_function_layout_analysis_support": "支援佈局介面分析 (類似 Android Studio 的 LayoutInspector)",
  "li_function_packaging_to_apk_support": "支援將指令碼檔案或專案打包為 APK 檔案",
  "li_function_recording_and_playback_support": "支援錄製功能及錄製回放",
  "li_function_root_features_support": "支援利用 Root 許可權擴充套件功能 (螢幕點選/滑動/錄製/Shell)",
  "li_function_screenshot_and_image_matching_support": "支援螢幕截圖/儲存截圖/圖片找色/圖片匹配",
  "li_function_selector_api_support": "支援選擇器 API 並提供控制元件遍歷/獲取資訊/控制元件操作 (類似 [UiAutomator](https://developer.android.com/training/testing/ui-automator))",
  "li_function_tasker_plugin_support": "支援作為 Tasker 外掛使用",
  "li_function_vscode_integration_support": "支援與 VSCode 連線並進行桌面開發 (需要 [AutoJs6-VSCode-Extension](http://vscext-project.autojs6.com) 外掛)",
  "li_major_changes_multilingual_support": "多語言適配 [ 西 / 法 / 俄 / 阿 / 日 / 韓 / 英 / 簡中 / 繁中 / ... ]",
  "li_major_changes_new_modules": "新增模組 [ [base64](https://docs.autojs6.com/#/base64) / [crypto](https://docs.autojs6.com/#/crypto) / [sqlite](https://docs.autojs6.com/#/sqlite) / [i18n](https://docs.autojs6.com/#/i18n) / [notice](https://docs.autojs6.com/#/notice) / [ocr](https://docs.autojs6.com/#/ocr) / [opencc](https://docs.autojs6.com/#/opencc) / [qrcode](https://docs.autojs6.com/#/qrcode) / [shizuku](https://docs.autojs6.com/#/shizuku) / ... ]",
  "li_major_changes_night_mode_support": "夜間模式適配 [ 設定頁面 / 文件頁面 / 佈局分析頁面 / 浮動視窗 / ... ]",
  "li_major_changes_rhino_engine_upgrade": "[Rhino](https://github.com/mozilla/rhino/) 引擎由 [v1.7.7.2](https://github.com/mozilla/rhino/releases/tag/Rhino1_7_7_2_Release) 升級至 {{ latest_rhino_engine_name_with_github_lineno_address }}",
  "li_major_changes_shizuku_adb_privileges_support": "支援透過 [Shizuku](https://shizuku.rikka.app/introduction/) 獲得 ADB 特權並使用系統 API",
  "li_major_changes_theme_color_support": "主題色適配 [ 分組 / 定位 / 搜尋 / 歷史記錄 / 亮度及對比度自動適配 / ... ]",
  "li_major_changes_vscode_plugin_support": "[VSCode 外掛](http://vscext-project.autojs6.com) 支援客戶端 (LAN) 及服務端 (LAN/ADB) 連線方式",
  "li_major_changes_websocket_support": "支援構建 [WebSocket](https://docs.autojs6.com/#/webSocketType) 例項以完成基於 [WebSocket 協議](https://zh.wikipedia.org/wiki/WebSocket) 的網路請求",
  "li_manual_documentation": "應用文件",
  "li_manual_troubleshooting": "疑難解答",
  "li_manual_user_manual": "使用手冊 (待編寫)",
  "li_project_build_step_click_build_project": "點選左側的 `Build Project (構建專案)` 按鈕 (形如鐵錘) 開始構建專案, 預設快捷鍵為 CTRL + F9",
  "li_project_build_step_toolbar": "在 `Toolbar (工具欄)` 中, 從 `Run/Debug Configurations (執行/除錯配置)` 選單中選擇 `app`, 這是 AutoJs6 的主應用",
  "li_project_build_step_wait_build_success": "等待構建完成, `Builder Output (構建輸出)` 標籤頁將出現類似 \"BUILD SUCCESSFUL in 1h 17m 34s\" 的訊息",
  "li_rhino_feature_array_includes_support": "支援 [Array.prototype.includes()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/includes)",
  "li_rhino_feature_bigint_support": "支援 [BigInt](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/BigInt)",
  "li_rhino_feature_object_values_support": "支援 [Object.values()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/values)",
  "li_rhino_feature_rhino_engine_compatibility_list": "檢視 Rhino 引擎 [相容性列表](https://mozilla.github.io/rhino/compat/engines.html)",
  "li_rhino_feature_rhino_engine_new_features": "檢視 Rhino 引擎 [更多新特性](http://project.autojs6.com/blob/master/app/src/main/assets-app/doc/RHINO.md)",
  "li_rhino_feature_template_strings_support": "支援 [模板字串](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Template_literals)",
  "li_rhino_feature_unicode_code_point_escapes_support": "Unicode [碼位](https://developer.mozilla.org/zh-CN/docs/Glossary/Code_point) 轉義支援 [輔助平面](https://zh.wikipedia.org/wiki/Unicode%E5%AD%97%E7%AC%A6%E5%B9%B3%E9%9D%A2%E6%98%A0%E5%B0%84#%E7%AC%AC%E4%B8%80%E8%BC%94%E5%8A%A9%E5%B9%B3%E9%9D%A2) 字元",
  "p_android_sdk_preparation_auto_sdk_location_filled": "上述 `Android SDK Location (安卓軟體開發工具包位置)` 處將自動完成路徑填寫, SDK 準備工作隨即完成",
  "p_android_sdk_preparation_edit_sdk_location": "`Android SDK Location (安卓軟體開發工具包位置)` 處如果是空白內容, 可點選右側 `Edit (編輯)` 按鈕, 在彈出的視窗中多次點選 `Next (下一步)`",
  "p_android_sdk_preparation_finish_sdk_installation": "待相關資源下載並安裝完畢, 點選 `Finish (完成)` 按鈕",
  "p_android_sdk_preparation_open_settings_android_studio": "打開 `Android SDK (安卓軟件開發工具包)` 設置頁面 (任選一種方式)",
  "p_android_sdk_tools_preparation_sdk_tools": "打開 `SDK Tools (SDK 工具)` 設置頁面 (任選一種方式)",
  "p_android_sdk_tools_preparation_sdk_tools_required": "AutoJs6 需要使用部分 SDK 工具 (如 NDK 及 CMake)",
  "p_android_sdk_tools_preparation_show_package_details": "勾選 `Show Package Details (顯示包詳情)`, 依次點選 NDK 及 CMake, 確保相應版本的工具已勾選, SDK 工具的版本資訊位於 AutoJs6 專案根目錄的 `version.properties` 檔案中",
  "p_android_studio_preparation_download_android_studio": "下載 `{{ android_studio_latest_recommended_version_name }}` 版本 (按需選擇其一)",
  "p_android_studio_preparation_install_android_studio": "安裝或解壓上述檔案, 執行 Android Studio 軟體 (如 `\"D:\\android-studio\\bin\\studio64.exe\"`)",
  "p_autojs6_gradle_tasks_intro": "除了構建專案 App 之外, AutoJs6 還支援一些預置的 Gradle 構建任務, 這些任務可以幫助開發者完成與專案相關的便捷操作",
  "p_autojs6_gradle_tasks_overview": "在 `Toolbar (工具欄)` 的 `Run/Debug Configurations (執行/除錯配置)` 選單中, 可看到各個 Gradle 預置任務, 每個任務左側均顯示帶小象圖示的任務標識",
  "p_autojs6_project_building_failed": "如果構建失敗, 可將異常訊息反饋到 AutoJs6 專案的 [議題 (Issues)](http://issues.autojs6.com) 頁面",
  "p_autojs6_project_building_if_failed": "如果構建未能自動進行, 或需要再次構建專案, 可執行以下步驟",
  "p_autojs6_project_cloning_autobuild_dependencies": "克隆完成後, Android Studio 將開啟 AutoJs6 的專案視窗, 並自動完成初步的 `Dependencies (依賴)` 下載及 Gradle 構建工作",
  "p_autojs6_project_cloning_build_successful": "構建完成後, Android Studio 的 `Build` 標籤頁將出現類似 `BUILD SUCCESSFUL in 1h 17m 34s` 的訊息",
  "p_autojs6_project_cloning_debug_version_apk": "打包專案並生成可安裝到安卓裝置的 APK 檔案",
  "p_autojs6_project_deploy_apk_overview": "打包專案並生成可安裝到安卓裝置的 APK 檔案",
  "p_autojs6_project_deploy_run_overview": "專案構建成功後, 可將專案作為應用程式 (簡稱 App) 部署到實體裝置 (如手機/平板電腦) 或虛擬裝置 (如 Android 模擬器) 中",
  "p_autojs6_resources_cloning_click_clone_button": "點選 `Clone (克隆)` 按鈕, 等待 AutoJs6 專案資源在裝置本地完成克隆",
  "p_autojs6_resources_cloning_clone_from_vcs": "在 Android Studio 主頁面點選 `Get from VCS (從版本控制系統獲取)` 按鈕",
  "p_autojs6_resources_cloning_fill_directory": "`Directory (目錄)` 處可根據需要修改為特定路徑",
  "p_autojs6_resources_cloning_fill_url": "`URL (統一資源定位地址)` 處填入 `https://github.com/SuperMonster003/AutoJs6.git`",
  "p_contribution_table_data_entries_sorted_by_recent_submissions": "資料條目按 `最近提交` 降序排序",
  "p_contribution_table_data_updated_on": "資料更新於 {{ var_date_contribution_table_data_updated }}",
  "p_contribution_table_new_pull_requests_pending_processing": "新發起的暫未處理的 Pull Request, 將在合併處理後加入資料統計",
  "p_contribution_table_some_contributors_not_appearing": "部分貢獻人員在 [GitHub Contributors](https://github.com/SuperMonster003/AutoJs6/graphs/contributors) 未能正常出現, 其提交記錄為空, 仍可透過 [Pull Request](https://github.com/SuperMonster003/AutoJs6/pulls) 檢視貢獻記錄",
  "p_contribution_table_thank_all_contributors": "感謝每一位參與 AutoJs6 專案開發的貢獻人員",
  "p_gradle_task_app_bundle_description": "任務執行後生成一個 AutoJs6 專案最新的 JAR 檔案, 利用 [Android d.ts Generator](https://github.com/NativeScript/android-dts-generator) (by [NativeScript](https://github.com/NativeScript)) 工具可生成 AutoJs6 主應用的宣告檔案 (d.ts 格式)",
  "p_gradle_task_app_bundle_summary": "打包 debug 版本編譯過程產物, 主要服務於 [AutoJs6 宣告檔案](http://dts-project.autojs6.com) 專案",
  "p_gradle_task_app_digest_filename_comparison": "以下為附加摘要資訊前後的檔名對比",
  "p_gradle_task_app_digest_summary": "附加摘要資訊到 release 版本編譯產生的 APK 檔案, 主要服務於 AutoJs6 釋出最新版本到 GitHub 前確定最終的檔名",
  "p_gradle_task_inrt_description": "AutoJs6 專案擁有不同的構建變體, 其中 \"inrt\" 變體用於實現 AutoJs6 的指令碼打包功能, 生成打包功能依賴的模板檔案 \"template.apk\"",
  "p_gradle_task_inrt_exception": "使用打包功能時可能會出現以下異常訊息",
  "p_gradle_task_inrt_exception_explanation": "這表明模板檔案不存在, 需要手動執行一次 `inrt:assemble` 任務, 生成模板檔案, 然後再次構建並部署 App",
  "p_gradle_task_inrt_summary": "組裝 \"inrt\" 構建變體, 主要服務於 AutoJs6 指令碼打包功能",
  "p_introduction_autojs6_is_based_on_autojs": "AutoJs6 在 Auto.js 最終專案的基礎上, 於 `2021/12/01` 進行二次開發, 繼續保持開源免費",
  "p_introduction_autojs_definition": "[Auto.js](https://github.com/hyb1996/Auto.js) 是一款 Android 平臺支援 [無障礙服務](https://developer.android.com/guide/topics/ui/accessibility/service?hl=zh-cn) 的 JavaScript 自動化工具軟體",
  "p_introduction_autojs_released_information": "Auto.js 由 [hyb1996](https://github.com/hyb1996) 於 `2017/01/27` 初次釋出, 於 `2020/03/13` 停止維護, 最終版本名稱為 `4.1.1 Alpha2`, 構建版本號為 `461`",
  "p_introduction_related_autojs_table_announce": "下表列舉了部分 Auto.js 相關專案 (按開發日期排序)",
  "p_introduction_related_autojs_table_app_is_free_or_not": "表格中 Auto.js Pro 7/8/9 為付費版本, 其餘為免費開源版本",
  "p_introduction_related_autojs_table_date_is_estimated": "表格中的日期為預估值, 與實際可能存在出入",
  "p_jdk_preparation_add_existing_jdk": "也可以選擇 `Add JDK (新增 JDK)` 新增已存在的本地 JDK, 定位其目錄並完成 JDK 新增",
  "p_jdk_preparation_download_jdk": "JDK 可使用 IDE 直接下載, 或訪問 [Oracle 網站](https://www.oracle.com/java/technologies/downloads/) 下載",
  "p_jdk_preparation_download_new_jdk": "否則可以選擇 `Download JDK (下載 JDK)` 下載合適的 JDK, 點選 `Download (下載)` 按鈕並等待下載完成",
  "p_jdk_preparation_jdk_max_supported_version": "截至 {{ var_date_jdk_max_supported }}, AutoJs6 可支援 JDK 最高版本為 `{{ jdk_max_supported }}`",
  "p_jdk_preparation_jdk_version_requirements": "AutoJs6 專案依賴的 `JDK (Java 開發工具包)` 發行版本不低於 `{{ jdk_min_supported }}`, 但建議不低於 `{{ jdk_min_suggested }}`",
  "p_jdk_preparation_open_jdk_settings": "打開 `Gradle JDK` 設置頁面 (任選一種方式)",
  "p_jdk_preparation_select_existing_jdk": "如果列表中已存在合適版本的 JDK (>= `{{ jdk_min_supported }}`), 則直接選擇即可",
  "p_jdk_preparation_select_gradle_jdk": "`Gradle JDK` 處可選擇或新增不同版本的 JDK",
  "p_languages_all_supported_for_readme": "當前自述檔案 `README.md` 支援以下語言",
  "p_major_changes_autojs6_version_updates": "相較於 Auto.js 最終開源版本 `4.1.1 Alpha2`, AutoJs6 主要進行了以下升級或變更",
  "p_project_compilation_and_build_android_studio_build_methods": "本小節以 Android Studio 為例介紹 AutoJs6 開源專案的編譯構建方法, IntelliJ IDEA 與之類似",
  "p_project_compilation_and_build_android_studio_intellij_idea": "如需對 AutoJs6 開源專案進行除錯或開發, 可使用 [Android Studio](https://pro.autojs.org/) ([Google](https://www.google.com/) 公司產品) 或 [IntelliJ IDEA](https://www.jetbrains.com/idea/) ([Jetbrains](https://www.jetbrains.com/) 公司產品)",
  "step_android_sdk": "Android SDK (安卓軟體開發工具包)",
  "step_appearance_behavior": "Appearance & Behavior (外觀與行為)",
  "step_build_execution_deployment": "Build, Execution, Deployment (構建, 執行, 部署)",
  "step_build_tools": "Build Tools (構建工具)",
  "step_debug_apk_path": "生成帶預設簽名的除錯版安裝包",
  "step_debug_version_path": "除錯版 (Debug Version)",
  "step_example_debug_path": "路徑示例: `\"D:\\AutoJs6\\app\\build\\outputs\\apk\\debug\\\"`",
  "step_example_release_path": "路徑示例: `\"D:\\AutoJs6\\app\\release\\\"`",
  "step_file": "File (文件)",
  "step_find_action": "Find action (查找操作)",
  "step_generate_debug_apk": "`Build (構建)`",
  "step_help": "Help (幫助)",
  "step_languages_and_frameworks": "Language & Frameworks (語言和框架)",
  "step_prepare_signing_file": "準備好簽名檔案 (新建或選取), 生成已簽名的釋出版安裝包",
  "step_release_version_apk": "釋出版 (Release Version)",
  "step_release_version_path": "`Build (構建)`",
  "step_sdk_tools_show_details": "SDK Tools (SDK 工具) (位於右側視窗)",
  "step_select_apk_option": "選擇 `APK` 選項",
  "step_settings": "Settings (設置)",
  "step_system_settings": "System Settings (系統設定)",
  "symbol_arrow": "->",
  "symbol_hash": "#",
  "symbol_pipe": "|",
  "table_header_contribution_contributors": "貢獻人員",
  "table_header_contribution_number_of_commits": "提交數",
  "table_header_contribution_recent_submissions": "最近提交",
  "table_header_introduction_related_autojs_app_name": "應用名稱",
  "table_header_introduction_related_autojs_developer": "開發者",
  "table_header_introduction_related_autojs_development_end_date": "終止開發日期",
  "table_header_introduction_related_autojs_development_start_date": "開發日期",
  "table_header_introduction_related_autojs_project": "專案",
  "text_autojs6_synopsis": "Android 平臺支援無障礙服務的 JavaScript 自動化工具",
  "text_changelog_item_dependency": "部分依賴或本地庫版本調整",
  "text_current_lowercase": "當前",
  "text_input": "輸入",
  "text_or": "或",
  "text_reference": "參閱",
  "text_search": "搜索",
  "text_stands_for": "表示",
  "text_traditional_method_lowercase": "傳統方式"
}