{
  "$name": "简体中文",
  "bq_annotation_android_sdk_preparation_accept_agreements": "注: 过程中可能需要同意一个或多个相关协议才能继续",
  "bq_annotation_android_sdk_preparation_skip_if_sdk_installed": "注: 如果计算机系统已安装 Android SDK (安卓软件开发工具包), 则可跳过此小节内容",
  "bq_annotation_android_sdk_tools_preparation_skip_if_tools_installed": "注: 如果计算机系统已安装 AutoJs6 全部所需的 Android SDK Tools, 则可跳过此小节内容",
  "bq_annotation_android_studio_release_date_note": "注: 上述版本发布时间为 {{ var_date_android_studio_latest_recommended_version_name }}. 如需下载其他版本, 或上述链接已失效, 可访问 [Android Studio 发行版本归档](https://developer.android.com/studio/archive?hl=en) 页面",
  "bq_annotation_autojs6_project_building_reference": "注: 关于如何构建并运行应用的更多内容, 可参阅 [Android Docs](https://developer.android.com/studio/run?hl=zh-cn)",
  "bq_annotation_autojs6_project_cloning_retry_clone": "注: 上述过程可能非常耗时. 若网络条件欠佳, 可能需要重试多次 (点击 Retry 按钮)",
  "bq_annotation_autojs6_project_deploy_apk": "注: 关于如何构建应用以向用户发布的更多内容, 可参阅 [Android Docs](https://developer.android.com/build/build-for-release?hl=zh-cn)",
  "bq_annotation_autojs6_resources_cloning_install_git_note": "注: 上述过程可能需要安装 [Git (分布式版本控制系统)](https://git-scm.com/download)",
  "bq_annotation_gradle_task_inrt_rebuild_if_needed": "注: 当主项目代码发生变更, 且希望将变更同步到打包应用时, 需要重新运行 `inrt:assemble` 任务生成模板文件并再次部署 App",
  "bq_annotation_jdk_preparation_skip_if_jdk_installed": "注: 如果计算机系统已安装 JDK 且版本满足上述要求, 则可跳过此小节内容",
  "h3_contribution": "贡献参与",
  "h3_environment": "环境",
  "h3_functions": "功能",
  "h3_introduction": "简介",
  "h3_languages_with_ascii": "语言 (Languages)",
  "h3_major_changes": "主要变更",
  "h3_manual": "指南",
  "h3_project_compilation_and_build": "项目编译构建",
  "h3_script_development_assistance": "脚本开发辅助",
  "h3_version_histories": "版本历史",
  "h4_android_sdk_preparation": "Android SDK 准备",
  "h4_android_sdk_tools_preparation": "Android SDK Tools 准备",
  "h4_android_studio_preparation": "Android Studio 准备",
  "h4_autojs6_gradle_tasks": "AutoJs6 预置 Gradle 构建任务",
  "h4_autojs6_project_building": "AutoJs6 项目构建",
  "h4_autojs6_project_deploy_apk": "AutoJs6 项目部署 (生成 APK)",
  "h4_autojs6_project_deploy_run": "AutoJs6 项目部署 (运行 App)",
  "h4_autojs6_resources_cloning": "AutoJs6 资源克隆",
  "h4_jdk_preparation": "JDK 准备",
  "h5_for_more_version_history": "更多版本历史可参阅",
  "label_after": "后",
  "label_before": "前",
  "li_deploy_run_step_click_run": "点击右侧的 `Run (运行)` 按钮 (形如三角形) 开始运行项目, 默认快捷键为 `F10`",
  "li_deploy_run_step_select_app": "在 `Toolbar (工具栏)` 中, 从 `Run/Debug Configurations (运行/调试配置)` 菜单中选择 `app`, 这是 AutoJs6 的主应用",
  "li_deploy_run_step_select_device": "在右侧 `Available Devices (可用设备)` 菜单中, 选择需要运行项目 App 的设备 (实体设备或虚拟设备)",
  "li_deploy_run_step_wait_install": "等待部署完成, 指定设备将自动安装并运行项目 App",
  "li_development_assistance_autojs6_api_reference_docs": "编写代码时, AutoJs6 相关 API 及使用方式, 可随时查阅应用文档",
  "li_development_assistance_code_completion_assist_development": "使用开发工具编写代码时, 代码智能补全功能可以更好地辅助开发者完成代码编写",
  "li_development_assistance_develop_scripts_for_autojs6": "开发 AutoJs6 可运行的脚本, 需使用合适的开发工具",
  "li_development_assistance_existing_projects_inspiration": "现有的脚本开发项目可作为参考, 激发个人脚本项目的创作灵感",
  "li_development_assistance_project_autojs6_documentation": "[AutoJs6-Documentation](http://docs-project.autojs6.com) - AutoJs6 应用文档",
  "li_development_assistance_project_autojs6_typescript_declarations": "[AutoJs6-TypeScript-Declarations](http://dts-project.autojs6.com) - AutoJs6 声明文件 (代码智能补全)",
  "li_development_assistance_project_autojs6_vscode_extension": "[AutoJs6-VSCode-Extension](http://vscext-project.autojs6.com) - AutoJs6 调试器 (VSCode 平台插件)",
  "li_development_assistance_projects_inspiration_ant_forest_supermonster003": "[Ant-Forest](https://github.com/SuperMonster003/Ant-Forest) - 蚂蚁森林能量自动收取脚本 by [SuperMonster003](https://github.com/SuperMonster003)",
  "li_development_assistance_projects_inspiration_ant_forest_tonyjiangwj": "[Ant-Forest](https://github.com/TonyJiangWJ/Ant-Forest) - 蚂蚁森林能量自动收取脚本 by [TonyJiangWJ](https://github.com/TonyJiangWJ)",
  "li_development_assistance_projects_inspiration_autojs_demo_snailuncle": "[autojsDemo](https://github.com/snailuncle/autojsDemo) - Auto.js 演示示例 by  [snailuncle](https://github.com/snailuncle)",
  "li_development_assistance_projects_inspiration_autojs_related_repos": "[autojs 相关仓库](https://github.com/topics/autojs) - GitHub 与 autojs 话题相关的全部仓库",
  "li_development_assistance_projects_inspiration_autojs_util_scripts_e1399579": "[autojs](https://github.com/e1399579/autojs) - Auto.js 实用脚本 by  [e1399579](https://github.com/e1399579)",
  "li_development_assistance_vscode_plugin_pc_script_development": "如需在 PC 上进行脚本编写与调试, VSCode 插件可以实现 PC 与手机的互联",
  "li_environment_android_os": "Android 操作系统",
  "li_environment_api_requirement": "[API](https://developer.android.com/guide/topics/manifest/uses-sdk-element#ApiLevels) [24](https://developer.android.com/reference/android/os/Build.VERSION_CODES#N) ([7.0](https://zh.wikipedia.org/wiki/Android_Nougat)) [[N](https://developer.android.com/reference/android/os/Build.VERSION_CODES#N)] 及以上",
  "li_function_accessibility_service_support": "支持基于 [无障碍服务](https://developer.android.com/reference/android/accessibilityservice/AccessibilityService) 的自动化操作",
  "li_function_e4x_support": "支持 [E4X](https://zh.wikipedia.org/wiki/E4X) (ECMAScript for XML) 编写界面",
  "li_function_floating_button_quick_actions": "支持浮动按钮快捷操作 (脚本录制及运行/查看包名及活动/布局分析)",
  "li_function_ide_features": "可用作 JavaScript IDE (代码补全/变量重命名/代码格式化)",
  "li_function_layout_analysis_support": "支持布局界面分析 (类似 Android Studio 的 LayoutInspector)",
  "li_function_packaging_to_apk_support": "支持将脚本文件或项目打包为 APK 文件",
  "li_function_recording_and_playback_support": "支持录制功能及录制回放",
  "li_function_root_features_support": "支持利用 Root 权限扩展功能 (屏幕点击/滑动/录制/Shell)",
  "li_function_screenshot_and_image_matching_support": "支持屏幕截图/保存截图/图片找色/图片匹配",
  "li_function_selector_api_support": "支持选择器 API 并提供控件遍历/获取信息/控件操作 (类似 [UiAutomator](https://developer.android.com/training/testing/ui-automator))",
  "li_function_tasker_plugin_support": "支持作为 Tasker 插件使用",
  "li_function_vscode_integration_support": "支持与 VSCode 连接并进行桌面开发 (需要 [AutoJs6-VSCode-Extension](http://vscext-project.autojs6.com) 插件)",
  "li_major_changes_multilingual_support": "多语言适配 [ 西 / 法 / 俄 / 阿 / 日 / 韩 / 英 / 简中 / 繁中 / ... ]",
  "li_major_changes_new_modules": "新增模块 [ [base64](https://docs.autojs6.com/#/base64) / [crypto](https://docs.autojs6.com/#/crypto) / [sqlite](https://docs.autojs6.com/#/sqlite) / [i18n](https://docs.autojs6.com/#/i18n) / [notice](https://docs.autojs6.com/#/notice) / [ocr](https://docs.autojs6.com/#/ocr) / [opencc](https://docs.autojs6.com/#/opencc) / [qrcode](https://docs.autojs6.com/#/qrcode) / [shizuku](https://docs.autojs6.com/#/shizuku) / ... ]",
  "li_major_changes_night_mode_support": "夜间模式适配 [ 设置页面 / 文档页面 / 布局分析页面 / 浮动窗口 / ... ]",
  "li_major_changes_rhino_engine_upgrade": "[Rhino](https://github.com/mozilla/rhino/) 引擎由 [v1.7.7.2](https://github.com/mozilla/rhino/releases/tag/Rhino1_7_7_2_Release) 升级至 {{ latest_rhino_engine_name_with_github_lineno_address }}",
  "li_major_changes_shizuku_adb_privileges_support": "支持通过 [Shizuku](https://shizuku.rikka.app/introduction/) 获得 ADB 特权并使用系统 API",
  "li_major_changes_theme_color_support": "主题色适配 [ 分组 / 定位 / 搜索 / 历史记录 / 亮度及对比度自动适配 / ... ]",
  "li_major_changes_vscode_plugin_support": "[VSCode 插件](http://vscext-project.autojs6.com) 支持客户端 (LAN) 及服务端 (LAN/ADB) 连接方式",
  "li_major_changes_websocket_support": "支持构建 [WebSocket](https://docs.autojs6.com/#/webSocketType) 实例以完成基于 [WebSocket 协议](https://zh.wikipedia.org/wiki/WebSocket) 的网络请求",
  "li_manual_documentation": "应用文档",
  "li_manual_troubleshooting": "疑难解答",
  "li_manual_user_manual": "使用手册 (待编写)",
  "li_project_build_step_click_build_project": "点击左侧的 `Build Project (构建项目)` 按钮 (形如铁锤) 开始构建项目, 默认快捷键为 CTRL + F9",
  "li_project_build_step_toolbar": "在 `Toolbar (工具栏)` 中, 从 `Run/Debug Configurations (运行/调试配置)` 菜单中选择 `app`, 这是 AutoJs6 的主应用",
  "li_project_build_step_wait_build_success": "等待构建完成, `Builder Output (构建输出)` 标签页将出现类似 \"BUILD SUCCESSFUL in 1h 17m 34s\" 的消息",
  "li_rhino_feature_array_includes_support": "支持 [Array.prototype.includes()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/includes)",
  "li_rhino_feature_bigint_support": "支持 [BigInt](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/BigInt)",
  "li_rhino_feature_object_values_support": "支持 [Object.values()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/values)",
  "li_rhino_feature_rhino_engine_compatibility_list": "查看 Rhino 引擎 [兼容性列表](https://mozilla.github.io/rhino/compat/engines.html)",
  "li_rhino_feature_rhino_engine_new_features": "查看 Rhino 引擎 [更多新特性](http://project.autojs6.com/blob/master/app/src/main/assets-app/doc/RHINO.md)",
  "li_rhino_feature_template_strings_support": "支持 [模板字符串](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Template_literals)",
  "li_rhino_feature_unicode_code_point_escapes_support": "Unicode [码位](https://developer.mozilla.org/zh-CN/docs/Glossary/Code_point) 转义支持 [辅助平面](https://zh.wikipedia.org/wiki/Unicode%E5%AD%97%E7%AC%A6%E5%B9%B3%E9%9D%A2%E6%98%A0%E5%B0%84#%E7%AC%AC%E4%B8%80%E8%BC%94%E5%8A%A9%E5%B9%B3%E9%9D%A2) 字符",
  "p_android_sdk_preparation_auto_sdk_location_filled": "上述 `Android SDK Location (安卓软件开发工具包位置)` 处将自动完成路径填写, SDK 准备工作随即完成",
  "p_android_sdk_preparation_edit_sdk_location": "`Android SDK Location (安卓软件开发工具包位置)` 处如果是空白内容, 可点击右侧 `Edit (编辑)` 按钮, 在弹出的窗口中多次点击 `Next (下一步)`",
  "p_android_sdk_preparation_finish_sdk_installation": "待相关资源下载并安装完毕, 点击 `Finish (完成)` 按钮",
  "p_android_sdk_preparation_open_settings_android_studio": "打开 `Android SDK (安卓软件开发工具包)` 设置页面 (任选一种方式)",
  "p_android_sdk_tools_preparation_sdk_tools": "打开 `SDK Tools (SDK 工具)` 设置页面 (任选一种方式)",
  "p_android_sdk_tools_preparation_sdk_tools_required": "AutoJs6 需要使用部分 SDK 工具 (如 NDK 及 CMake)",
  "p_android_sdk_tools_preparation_show_package_details": "勾选 `Show Package Details (显示包详情)`, 依次点击 NDK 及 CMake, 确保相应版本的工具已勾选, SDK 工具的版本信息位于 AutoJs6 项目根目录的 `version.properties` 文件中",
  "p_android_studio_preparation_download_android_studio": "下载 `{{ android_studio_latest_recommended_version_name }}` 版本 (按需选择其一)",
  "p_android_studio_preparation_install_android_studio": "安装或解压上述文件, 运行 Android Studio 软件 (如 `\"D:\\android-studio\\bin\\studio64.exe\"`)",
  "p_autojs6_gradle_tasks_intro": "除了构建项目 App 之外, AutoJs6 还支持一些预置的 Gradle 构建任务, 这些任务可以帮助开发者完成与项目相关的便捷操作",
  "p_autojs6_gradle_tasks_overview": "在 `Toolbar (工具栏)` 的 `Run/Debug Configurations (运行/调试配置)` 菜单中, 可看到各个 Gradle 预置任务, 每个任务左侧均显示带小象图标的任务标识",
  "p_autojs6_project_building_failed": "如果构建失败, 可将异常消息反馈到 AutoJs6 项目的 [议题 (Issues)](http://issues.autojs6.com) 页面",
  "p_autojs6_project_building_if_failed": "如果构建未能自动进行, 或需要再次构建项目, 可执行以下步骤",
  "p_autojs6_project_cloning_autobuild_dependencies": "克隆完成后, Android Studio 将打开 AutoJs6 的项目窗口, 并自动完成初步的 `Dependencies (依赖)` 下载及 Gradle 构建工作",
  "p_autojs6_project_cloning_build_successful": "构建完成后, Android Studio 的 `Build` 标签页将出现类似 `BUILD SUCCESSFUL in 1h 17m 34s` 的消息",
  "p_autojs6_project_cloning_debug_version_apk": "打包项目并生成可安装到安卓设备的 APK 文件",
  "p_autojs6_project_deploy_apk_overview": "打包项目并生成可安装到安卓设备的 APK 文件",
  "p_autojs6_project_deploy_run_overview": "项目构建成功后, 可将项目作为应用程序 (简称 App) 部署到实体设备 (如手机/平板电脑) 或虚拟设备 (如 Android 模拟器) 中",
  "p_autojs6_resources_cloning_click_clone_button": "点击 `Clone (克隆)` 按钮, 等待 AutoJs6 项目资源在设备本地完成克隆",
  "p_autojs6_resources_cloning_clone_from_vcs": "在 Android Studio 主页面点击 `Get from VCS (从版本控制系统获取)` 按钮",
  "p_autojs6_resources_cloning_fill_directory": "`Directory (目录)` 处可根据需要修改为特定路径",
  "p_autojs6_resources_cloning_fill_url": "`URL (统一资源定位地址)` 处填入 `https://github.com/SuperMonster003/AutoJs6.git`",
  "p_contribution_table_data_entries_sorted_by_recent_submissions": "数据条目按 `最近提交` 降序排序",
  "p_contribution_table_data_updated_on": "数据更新于 {{ var_date_contribution_table_data_updated }}",
  "p_contribution_table_new_pull_requests_pending_processing": "新发起的暂未处理的 Pull Request, 将在合并处理后加入数据统计",
  "p_contribution_table_some_contributors_not_appearing": "部分贡献人员在 [GitHub Contributors](https://github.com/SuperMonster003/AutoJs6/graphs/contributors) 未能正常出现, 其提交记录为空, 仍可通过 [Pull Request](https://github.com/SuperMonster003/AutoJs6/pulls) 查看贡献记录",
  "p_contribution_table_thank_all_contributors": "感谢每一位参与 AutoJs6 项目开发的贡献人员",
  "p_gradle_task_app_bundle_description": "任务运行后生成一个 AutoJs6 项目最新的 JAR 文件, 利用 [Android d.ts Generator](https://github.com/NativeScript/android-dts-generator) (by [NativeScript](https://github.com/NativeScript)) 工具可生成 AutoJs6 主应用的声明文件 (d.ts 格式)",
  "p_gradle_task_app_bundle_summary": "打包 debug 版本编译过程产物, 主要服务于 [AutoJs6 声明文件](http://dts-project.autojs6.com) 项目",
  "p_gradle_task_app_digest_filename_comparison": "以下为附加摘要信息前后的文件名对比",
  "p_gradle_task_app_digest_summary": "附加摘要信息到 release 版本编译产生的 APK 文件, 主要服务于 AutoJs6 发布最新版本到 GitHub 前确定最终的文件名",
  "p_gradle_task_inrt_description": "AutoJs6 项目拥有不同的构建变体, 其中 \"inrt\" 变体用于实现 AutoJs6 的脚本打包功能, 生成打包功能依赖的模板文件 \"template.apk\"",
  "p_gradle_task_inrt_exception": "使用打包功能时可能会出现以下异常消息",
  "p_gradle_task_inrt_exception_explanation": "这表明模板文件不存在, 需要手动运行一次 `inrt:assemble` 任务, 生成模板文件, 然后再次构建并部署 App",
  "p_gradle_task_inrt_summary": "组装 \"inrt\" 构建变体, 主要服务于 AutoJs6 脚本打包功能",
  "p_introduction_autojs6_is_based_on_autojs": "AutoJs6 在 Auto.js 最终项目的基础上, 于 `2021/12/01` 进行二次开发, 继续保持开源免费",
  "p_introduction_autojs_definition": "[Auto.js](https://github.com/hyb1996/Auto.js) 是一款 Android 平台支持 [无障碍服务](https://developer.android.com/guide/topics/ui/accessibility/service?hl=zh-cn) 的 JavaScript 自动化工具软件",
  "p_introduction_autojs_released_information": "Auto.js 由 [hyb1996](https://github.com/hyb1996) 于 `2017/01/27` 初次发布, 于 `2020/03/13` 停止维护, 最终版本名称为 `4.1.1 Alpha2`, 构建版本号为 `461`",
  "p_introduction_related_autojs_table_announce": "下表列举了部分 Auto.js 相关项目 (按开发日期排序)",
  "p_introduction_related_autojs_table_app_is_free_or_not": "表格中 Auto.js Pro 7/8/9 为付费版本, 其余为免费开源版本",
  "p_introduction_related_autojs_table_date_is_estimated": "表格中的日期为预估值, 实际可能存在出入",
  "p_jdk_preparation_add_existing_jdk": "也可以选择 `Add JDK (添加 JDK)` 添加已存在的本地 JDK, 定位其目录并完成 JDK 添加",
  "p_jdk_preparation_download_jdk": "JDK 可使用 IDE 直接下载, 或访问 [Oracle 网站](https://www.oracle.com/java/technologies/downloads/) 下载",
  "p_jdk_preparation_download_new_jdk": "否则可以选择 `Download JDK (下载 JDK)` 下载合适的 JDK, 点击 `Download (下载)` 按钮并等待下载完成",
  "p_jdk_preparation_jdk_max_supported_version": "截至 {{ var_date_jdk_max_supported }}, AutoJs6 可支持 JDK 最高版本为 `{{ jdk_max_supported }}`",
  "p_jdk_preparation_jdk_version_requirements": "AutoJs6 项目依赖的 `JDK (Java 开发工具包)` 发行版本不低于 `{{ jdk_min_supported }}`, 但建议不低于 `{{ jdk_min_suggested }}`",
  "p_jdk_preparation_open_jdk_settings": "打开 `Gradle JDK` 设置页面 (任选一种方式)",
  "p_jdk_preparation_select_existing_jdk": "如果列表中已存在合适版本的 JDK (>= `{{ jdk_min_supported }}`), 则直接选择即可",
  "p_jdk_preparation_select_gradle_jdk": "`Gradle JDK` 处可选择或添加不同版本的 JDK",
  "p_languages_all_supported_for_readme": "当前自述文件 `README.md` 支持以下语言",
  "p_major_changes_autojs6_version_updates": "相较于 Auto.js 最终开源版本 `4.1.1 Alpha2`, AutoJs6 主要进行了以下升级或变更",
  "p_project_compilation_and_build_android_studio_build_methods": "本小节以 Android Studio 为例介绍 AutoJs6 开源项目的编译构建方法, IntelliJ IDEA 与之类似",
  "p_project_compilation_and_build_android_studio_intellij_idea": "如需对 AutoJs6 开源项目进行调试或开发, 可使用 [Android Studio](https://pro.autojs.org/) ([Google](https://www.google.com/) 公司产品) 或 [IntelliJ IDEA](https://www.jetbrains.com/idea/) ([Jetbrains](https://www.jetbrains.com/) 公司产品)",
  "step_android_sdk": "Android SDK (安卓软件开发工具包)",
  "step_appearance_behavior": "Appearance & Behavior (外观与行为)",
  "step_build_execution_deployment": "Build, Execution, Deployment (构建, 执行, 部署)",
  "step_build_tools": "Build Tools (构建工具)",
  "step_debug_apk_path": "生成带默认签名的调试版安装包",
  "step_debug_version_path": "调试版 (Debug Version)",
  "step_example_debug_path": "路径示例: `\"D:\\AutoJs6\\app\\build\\outputs\\apk\\debug\\\"`",
  "step_example_release_path": "路径示例: `\"D:\\AutoJs6\\app\\release\\\"`",
  "step_file": "File (文件)",
  "step_find_action": "Find action (查找操作)",
  "step_generate_debug_apk": "`Build (构建)`",
  "step_help": "Help (帮助)",
  "step_languages_and_frameworks": "Language & Frameworks (语言和框架)",
  "step_prepare_signing_file": "准备好签名文件 (新建或选取), 生成已签名的发布版安装包",
  "step_release_version_apk": "发布版 (Release Version)",
  "step_release_version_path": "`Build (构建)`",
  "step_sdk_tools_show_details": "SDK Tools (SDK 工具) (位于右侧窗口)",
  "step_select_apk_option": "选择 `APK` 选项",
  "step_settings": "Settings (设置)",
  "step_system_settings": "System Settings (系统设置)",
  "symbol_arrow": "->",
  "symbol_hash": "#",
  "symbol_pipe": "|",
  "table_header_contribution_contributors": "贡献人员",
  "table_header_contribution_number_of_commits": "提交数",
  "table_header_contribution_recent_submissions": "最近提交",
  "table_header_introduction_related_autojs_app_name": "应用名称",
  "table_header_introduction_related_autojs_developer": "开发者",
  "table_header_introduction_related_autojs_development_end_date": "终止开发日期",
  "table_header_introduction_related_autojs_development_start_date": "开发日期",
  "table_header_introduction_related_autojs_project": "项目",
  "text_autojs6_synopsis": "Android 平台支持无障碍服务的 JavaScript 自动化工具",
  "text_changelog_item_dependency": "部分依赖或本地库版本调整",
  "text_current_lowercase": "当前",
  "text_input": "输入",
  "text_or": "或",
  "text_reference": "参阅",
  "text_search": "搜索",
  "text_stands_for": "表示",
  "text_traditional_method_lowercase": "传统方式"
}